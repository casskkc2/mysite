<?phpnamespace Home\Event;use Think\Controller;class IssueEvent extends Controller {		public function getIssueList($data) {		$page = isset($data['page']) ? $data['page'] : 0;		$rows = isset($data['rows']) ? $data['rows'] : 0;		$sort = isset($data['sort']) ? $data['sort'] : 'id';		$order_by = isset($data['order']) ? $data['order'] : 'ASC';				$is_advance = isset($data['advance']) ? $data['advance'] : false;				$cond = array(			'city_id' => $data['city_id']		);		if (!$is_advance) {			$cond['area_id'] = array('in', $data['area']);			$cond['target_id'] = array('in', $data['target']);		}				if (!empty($data['keywords'])) {			$arr = explode(' ', preg_replace('/\s{2,}/', ' ', $data['keywords']));			$id_cond = array();			$tags_cond = array();			foreach($arr as $val) {				$tags_cond[] = array('like', '%' . $val . '%');				$id_cond[] = array('eq', $val);			}			!empty($tags_cond) && $tags_cond[] = 'and';			!empty($id_cond) && $id_cond[] = 'or';						$where = array();			!empty($tags_cond) && $where['tags'] = $tags_cond;			!empty($id_cond) && $where['id'] = $id_cond;						if (!empty($where)) {				$where['_logic'] = 'or';				$cond['_complex'] = $where;			}		}		//print_r($cond);exit;		$examine_time_cond = array();		!empty($data['exm_end_date']) && $examine_time_cond[]= array('elt', $data['exm_end_date'] . ' 23:59:59');		!empty($data['exm_start_date']) && $examine_time_cond[]= array('egt', $data['exm_start_date']);		!empty($examine_time_cond) && $cond['examine_time'] = $examine_time_cond;				!empty($data['status_id']) && $cond['status_id'] = $data['status_id'];		!empty($data['is_vp']) && $cond['is_vp'] = $data['is_vp'];		!empty($data['end_date']) && $cond['end_date'] = array('lt', $data['end_date']);				$total = M('Issue')->alias('a')			->where($cond)->count();				if ($rows > 0) {			$start = ($page - 1) * $rows;			$list = M('Issue')->alias('a')				->field('a.*')				->where($cond)				->order($sort . ' ' . $order_by)				->limit($start, $rows)				->select();		}else {			$list = M('Issue')->alias('a')				->field('a.*')				->where($cond)				->order($sort . ' ' . $order_by)				->select();		}		foreach($list as $key=>$row) {			$ts = strtotime($row['examine_time']);			$list[$key]['date'] = date('Y-m-d', $ts);			$list[$key]['time'] = date('H:i', $ts);		}				return array(			'total'=>$total,			'data' => $list		);	}		public function statusToQueryCondition($status, &$data) {		if ($status < 20) {			$data['status_id'] = $status;		}else {			switch($status) {				case 21:					$data['end_date'] = date('Y-m-d');					break;				case 22:					$data['is_vp'] = 1;					break;			}		}	}		public function getIssueDetail($id) {		$cond = array('a.id'=>$id);		$info = M('Issue')->alias('a')			->field('a.*, b.name as status_name')			->join('issue_status b ON a.status_id=b.status_id')			->where($cond)->find();				if(empty($info)) return array();				$ts = strtotime($info['examine_time']);		$info['date'] = date('Y-m-d', $ts);		$info['time'] = date('H:i', $ts);		!empty($info['img']) && $info['img'] = C('HTTP_SERVER') . $info['img'];		$info['area_text'] = $info['area1'] . $info['area2'] . $info['area3'] . $info['area4'];		$info['target_text'] = $info['target1'] . $info['target2'] . $info['target3'];				return $info;	}		public function getReplyList($issue_id, $type) {		$cond = array('a.issue_id'=>$issue_id);		switch($type) {			case 'text':				$cond['a.type'] = 4;				break;			case 'attachment':				$cond['a.type'] = array('neq', 4);				break;		}				$list = M('IssueReply')->alias('a')			->field('a.*, b.username')			->join('user b ON a.user_id=b.id')			->where($cond)			->select();		foreach($list as $key=>$row) {			if (!empty($row['path'])) {				$list[$key]['path'] = C('HTTP_SERVER') . $row['path'];				$ext = substr(strrchr($row['path'], '.'), 1);				$img_types = explode('|', C('ALLOW_IMG_TYPE'));				if ($row['type'] ==2 || in_array($ext, $img_types)) {					$list[$key]['is_img'] = 1;				}				$list[$key]['ext'] = $ext;				$list[$key]['fname'] = substr(strrchr($row['path'], '/'), 1);			}		}				return $list;	}		public function canEdit($status_id, $user_type_id) {		if ($status_id == 1 && $user_type_id == 11) {			return true;		}else if($status_id == 2 && $user_type_id == 12) {			return true;		}else if($user_type_id == 10) {			return true;		}				return false;	}		public function canReply($status_id, $user_type_id) {		// this one is for test, should be removed		if ($user_type_id == 12) return true;				if ($user_type_id < 20) {			return false;		}else if ($status_id == 3 && $user_type_id == 22) {			return false;		}				return true;	}		public function getStatusOperations($status_id, $user_type_id) {		$ret = array(			'code' => 1, // 1 change status, 2 pass or not, 3 can not operate			'data' => array()					);		// for test		if ($user_type_id == 12 and $status_id < 3) { // this one is for test, should be removed			$cond = array(				'status_id' => array('in', '4,5,6,7,12')			);			$ret['data'] = M('IssueStatus')->field('*, status_id AS operation_id')->where($cond)->select();		}		else if ($status_id == 3 && $user_type_id == 21) {			$cond = array(				'status_id' => array('in', '4,5,6,7,12')			);			$ret['data'] = M('IssueStatus')->field('*, status_id AS operation_id')->where($cond)->select();		}else if ($user_type_id == 22) {			if ($status_id == 4) {				$ret['code'] = 2;				$ret['data'] = array(					array('operation_id'=>102, 'name'=>'驳回')				);			}else if(in_array($status_id, array(5,6,7,12))) {				$ret['code'] = 2;				$ret['data'] = array(					array('operation_id'=>101, 'name'=>'同意'),					array('operation_id'=>102, 'name'=>'驳回')				);			}		}else if ($user_type_id == 20) {			$ret['code'] = 2;			$ret['data'] = array(				array('operation_id'=>101, 'name'=>'同意'),				array('operation_id'=>102, 'name'=>'驳回')			);		}else{			$ret['code'] = 3;		}		return $ret;	}		public function doOperation($operation_id, $user_info, $issue_info, $setting) {		$cond = array('id'=>$issue_info['id']);		if ( in_array($operation_id, array(4,5,6,7,12)) ) {			$data = array(				'status_id' => $operation_id			);			//if ($user_info['user_type_id'] < 20) {			//	$data['last_mod_user_id'] = $user_info['id'];			//}else {				$data['last_mod_user2_id'] = $user_info['id'];			//}			$stat = M('Issue')->where($cond)->data($data)->save();			if (false === $stat) return false;		}else if ( in_array($operation_id, array(101, 102)) ) {			if ($operation_id == 101) { // agree				$opt_res_cfg = array(					4	=> 8,					5	=> 9,					6	=> 10,					7	=> 11,					12	=> 3				);				if ( isset($opt_res_cfg[$issue_info['status_id']]) ) {					$data = array(						'status_id' => $opt_res_cfg[$issue_info['status_id']],						'last_mod_user2_id' => $user_info['id']					);					if ($issue_info['status_id'] == 12) {						if (!empty($issue_info['end_date']) && !empty($setting['config_exp_days'])) {							$data['end_date'] = date('Y-m-d', strtotime($issue_info['end_date'] + 3600 * 24 * $setting['config_exp_days']));						}					}					$stat = M('Issue')->where($cond)->data($data)->save();					if (false === $stat) return false;				}			}else if ($operation_id == 102) { // reject				$opt_res_cfg = array(					4	=> 3,					5	=> 3,					6	=> 3,					7	=> 3,					8	=> 3,					9	=> 3,					10	=> 3,					11	=> 3,					12	=> 3				);				if ( isset($opt_res_cfg[$issue_info['status_id']]) ) {					$data = array(						'status_id' => $opt_res_cfg[$issue_info['status_id']],						'last_mod_user2_id' => $user_info['id']					);										$stat = M('Issue')->where($cond)->data($data)->save();					if (false === $stat) return false;				}			}		}				return true;	}}